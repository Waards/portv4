{"ast":null,"code":"/*!\n * VERSION: 1.3.9\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\nimport { _gsScope } from \"./TweenLite.js\";\nvar _RAD2DEG = 180 / Math.PI,\n  _r1 = [],\n  _r2 = [],\n  _r3 = [],\n  _corProps = {},\n  _globals = _gsScope._gsDefine.globals,\n  Segment = function (a, b, c, d) {\n    if (c === d) {\n      //if c and d match, the final autoRotate value could lock at -90 degrees, so differentiate them slightly.\n      c = d - (d - b) / 1000000;\n    }\n    if (a === b) {\n      //if a and b match, the starting autoRotate value could lock at -90 degrees, so differentiate them slightly.\n      b = a + (c - a) / 1000000;\n    }\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.da = d - a;\n    this.ca = c - a;\n    this.ba = b - a;\n  },\n  _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",\n  cubicToQuadratic = function (a, b, c, d) {\n    var q1 = {\n        a: a\n      },\n      q2 = {},\n      q3 = {},\n      q4 = {\n        c: d\n      },\n      mab = (a + b) / 2,\n      mbc = (b + c) / 2,\n      mcd = (c + d) / 2,\n      mabc = (mab + mbc) / 2,\n      mbcd = (mbc + mcd) / 2,\n      m8 = (mbcd - mabc) / 8;\n    q1.b = mab + (a - mab) / 4;\n    q2.b = mabc + m8;\n    q1.c = q2.a = (q1.b + q2.b) / 2;\n    q2.c = q3.a = (mabc + mbcd) / 2;\n    q3.b = mbcd - m8;\n    q4.b = mcd + (d - mcd) / 4;\n    q3.c = q4.a = (q3.b + q4.b) / 2;\n    return [q1, q2, q3, q4];\n  },\n  _calculateControlPoints = function (a, curviness, quad, basic, correlate) {\n    var l = a.length - 1,\n      ii = 0,\n      cp1 = a[0].a,\n      i,\n      p1,\n      p2,\n      p3,\n      seg,\n      m1,\n      m2,\n      mm,\n      cp2,\n      qb,\n      r1,\n      r2,\n      tl;\n    for (i = 0; i < l; i++) {\n      seg = a[ii];\n      p1 = seg.a;\n      p2 = seg.d;\n      p3 = a[ii + 1].d;\n      if (correlate) {\n        r1 = _r1[i];\n        r2 = _r2[i];\n        tl = (r2 + r1) * curviness * 0.25 / (basic ? 0.5 : _r3[i] || 0.5);\n        m1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : r1 !== 0 ? tl / r1 : 0);\n        m2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : r2 !== 0 ? tl / r2 : 0);\n        mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));\n      } else {\n        m1 = p2 - (p2 - p1) * curviness * 0.5;\n        m2 = p2 + (p3 - p2) * curviness * 0.5;\n        mm = p2 - (m1 + m2) / 2;\n      }\n      m1 += mm;\n      m2 += mm;\n      seg.c = cp2 = m1;\n      if (i !== 0) {\n        seg.b = cp1;\n      } else {\n        seg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.\n      }\n\n      seg.da = p2 - p1;\n      seg.ca = cp2 - p1;\n      seg.ba = cp1 - p1;\n      if (quad) {\n        qb = cubicToQuadratic(p1, cp1, cp2, p2);\n        a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n        ii += 4;\n      } else {\n        ii++;\n      }\n      cp1 = m2;\n    }\n    seg = a[ii];\n    seg.b = cp1;\n    seg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.\n    seg.da = seg.d - seg.a;\n    seg.ca = seg.c - seg.a;\n    seg.ba = cp1 - seg.a;\n    if (quad) {\n      qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n      a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n    }\n  },\n  _parseAnchors = function (values, p, correlate, prepend) {\n    var a = [],\n      l,\n      i,\n      p1,\n      p2,\n      p3,\n      tmp;\n    if (prepend) {\n      values = [prepend].concat(values);\n      i = values.length;\n      while (--i > -1) {\n        if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n          values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons\n        }\n      }\n    }\n\n    l = values.length - 2;\n    if (l < 0) {\n      a[0] = new Segment(values[0][p], 0, 0, values[0][p]);\n      return a;\n    }\n    for (i = 0; i < l; i++) {\n      p1 = values[i][p];\n      p2 = values[i + 1][p];\n      a[i] = new Segment(p1, 0, 0, p2);\n      if (correlate) {\n        p3 = values[i + 2][p];\n        _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n        _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n      }\n    }\n    a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n    return a;\n  },\n  bezierThrough = function (values, curviness, quadratic, basic, correlate, prepend) {\n    var obj = {},\n      props = [],\n      first = prepend || values[0],\n      i,\n      p,\n      a,\n      j,\n      r,\n      l,\n      seamless,\n      last;\n    correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n    if (curviness == null) {\n      curviness = 1;\n    }\n    for (p in values[0]) {\n      props.push(p);\n    }\n    //check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)\n    if (values.length > 1) {\n      last = values[values.length - 1];\n      seamless = true;\n      i = props.length;\n      while (--i > -1) {\n        p = props[i];\n        if (Math.abs(first[p] - last[p]) > 0.05) {\n          //build in a tolerance of +/-0.05 to accommodate rounding errors.\n          seamless = false;\n          break;\n        }\n      }\n      if (seamless) {\n        values = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens\n        if (prepend) {\n          values.unshift(prepend);\n        }\n        values.push(values[1]);\n        prepend = values[values.length - 3];\n      }\n    }\n    _r1.length = _r2.length = _r3.length = 0;\n    i = props.length;\n    while (--i > -1) {\n      p = props[i];\n      _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n      obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n    }\n    i = _r1.length;\n    while (--i > -1) {\n      _r1[i] = Math.sqrt(_r1[i]);\n      _r2[i] = Math.sqrt(_r2[i]);\n    }\n    if (!basic) {\n      i = props.length;\n      while (--i > -1) {\n        if (_corProps[p]) {\n          a = obj[props[i]];\n          l = a.length - 1;\n          for (j = 0; j < l; j++) {\n            r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n            _r3[j] = (_r3[j] || 0) + r * r;\n          }\n        }\n      }\n      i = _r3.length;\n      while (--i > -1) {\n        _r3[i] = Math.sqrt(_r3[i]);\n      }\n    }\n    i = props.length;\n    j = quadratic ? 4 : 1;\n    while (--i > -1) {\n      p = props[i];\n      a = obj[p];\n      _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties\n      if (seamless) {\n        a.splice(0, j);\n        a.splice(a.length - j, j);\n      }\n    }\n    return obj;\n  },\n  _parseBezierData = function (values, type, prepend) {\n    type = type || \"soft\";\n    var obj = {},\n      inc = type === \"cubic\" ? 3 : 2,\n      soft = type === \"soft\",\n      props = [],\n      a,\n      b,\n      c,\n      d,\n      cur,\n      i,\n      j,\n      l,\n      p,\n      cnt,\n      tmp;\n    if (soft && prepend) {\n      values = [prepend].concat(values);\n    }\n    if (values == null || values.length < inc + 1) {\n      throw \"invalid Bezier data\";\n    }\n    for (p in values[0]) {\n      props.push(p);\n    }\n    i = props.length;\n    while (--i > -1) {\n      p = props[i];\n      obj[p] = cur = [];\n      cnt = 0;\n      l = values.length;\n      for (j = 0; j < l; j++) {\n        a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n        if (soft) if (j > 1) if (j < l - 1) {\n          cur[cnt++] = (a + cur[cnt - 2]) / 2;\n        }\n        cur[cnt++] = a;\n      }\n      l = cnt - inc + 1;\n      cnt = 0;\n      for (j = 0; j < l; j += inc) {\n        a = cur[j];\n        b = cur[j + 1];\n        c = cur[j + 2];\n        d = inc === 2 ? 0 : cur[j + 3];\n        cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n      }\n      cur.length = cnt;\n    }\n    return obj;\n  },\n  _addCubicLengths = function (a, steps, resolution) {\n    var inc = 1 / resolution,\n      j = a.length,\n      d,\n      d1,\n      s,\n      da,\n      ca,\n      ba,\n      p,\n      i,\n      inv,\n      bez,\n      index;\n    while (--j > -1) {\n      bez = a[j];\n      s = bez.a;\n      da = bez.d - s;\n      ca = bez.c - s;\n      ba = bez.b - s;\n      d = d1 = 0;\n      for (i = 1; i <= resolution; i++) {\n        p = inc * i;\n        inv = 1 - p;\n        d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n        index = j * resolution + i - 1;\n        steps[index] = (steps[index] || 0) + d * d;\n      }\n    }\n  },\n  _parseLengthData = function (obj, resolution) {\n    resolution = resolution >> 0 || 6;\n    var a = [],\n      lengths = [],\n      d = 0,\n      total = 0,\n      threshold = resolution - 1,\n      segments = [],\n      curLS = [],\n      //current length segments array\n      p,\n      i,\n      l,\n      index;\n    for (p in obj) {\n      _addCubicLengths(obj[p], a, resolution);\n    }\n    l = a.length;\n    for (i = 0; i < l; i++) {\n      d += Math.sqrt(a[i]);\n      index = i % resolution;\n      curLS[index] = d;\n      if (index === threshold) {\n        total += d;\n        index = i / resolution >> 0;\n        segments[index] = curLS;\n        lengths[index] = total;\n        d = 0;\n        curLS = [];\n      }\n    }\n    return {\n      length: total,\n      lengths: lengths,\n      segments: segments\n    };\n  },\n  BezierPlugin = _gsScope._gsDefine.plugin({\n    propName: \"bezier\",\n    priority: -1,\n    version: \"1.3.9\",\n    API: 2,\n    global: true,\n    //gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n    init: function (target, vars, tween) {\n      this._target = target;\n      if (vars instanceof Array) {\n        vars = {\n          values: vars\n        };\n      }\n      this._func = {};\n      this._mod = {};\n      this._props = [];\n      this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n      var values = vars.values || [],\n        first = {},\n        second = values[0],\n        autoRotate = vars.autoRotate || tween.vars.orientToBezier,\n        p,\n        isFunc,\n        i,\n        j,\n        prepend;\n      this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [[\"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0]] : null;\n      for (p in second) {\n        this._props.push(p);\n      }\n      i = this._props.length;\n      while (--i > -1) {\n        p = this._props[i];\n        this._overwriteProps.push(p);\n        isFunc = this._func[p] = typeof target[p] === \"function\";\n        first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n        if (!prepend) if (first[p] !== values[0][p]) {\n          prepend = first;\n        }\n      }\n      this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n      this._segCount = this._beziers[p].length;\n      if (this._timeRes) {\n        var ld = _parseLengthData(this._beziers, this._timeRes);\n        this._length = ld.length;\n        this._lengths = ld.lengths;\n        this._segments = ld.segments;\n        this._l1 = this._li = this._s1 = this._si = 0;\n        this._l2 = this._lengths[0];\n        this._curSeg = this._segments[0];\n        this._s2 = this._curSeg[0];\n        this._prec = 1 / this._curSeg.length;\n      }\n      if (autoRotate = this._autoRotate) {\n        this._initialRotations = [];\n        if (!(autoRotate[0] instanceof Array)) {\n          this._autoRotate = autoRotate = [autoRotate];\n        }\n        i = autoRotate.length;\n        while (--i > -1) {\n          for (j = 0; j < 3; j++) {\n            p = autoRotate[i][j];\n            this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n          }\n          p = autoRotate[i][2];\n          this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n          this._overwriteProps.push(p);\n        }\n      }\n      this._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.\n      return true;\n    },\n    //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n    set: function (v) {\n      var segments = this._segCount,\n        func = this._func,\n        target = this._target,\n        notStart = v !== this._startRatio,\n        curIndex,\n        inv,\n        i,\n        p,\n        b,\n        t,\n        val,\n        l,\n        lengths,\n        curSeg,\n        v1;\n      if (!this._timeRes) {\n        curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n        t = (v - curIndex * (1 / segments)) * segments;\n      } else {\n        lengths = this._lengths;\n        curSeg = this._curSeg;\n        v1 = v * this._length;\n        i = this._li;\n        //find the appropriate segment (if the currently cached one isn't correct)\n        if (v1 > this._l2 && i < segments - 1) {\n          l = segments - 1;\n          while (i < l && (this._l2 = lengths[++i]) <= v1) {}\n          this._l1 = lengths[i - 1];\n          this._li = i;\n          this._curSeg = curSeg = this._segments[i];\n          this._s2 = curSeg[this._s1 = this._si = 0];\n        } else if (v1 < this._l1 && i > 0) {\n          while (i > 0 && (this._l1 = lengths[--i]) >= v1) {}\n          if (i === 0 && v1 < this._l1) {\n            this._l1 = 0;\n          } else {\n            i++;\n          }\n          this._l2 = lengths[i];\n          this._li = i;\n          this._curSeg = curSeg = this._segments[i];\n          this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n          this._s2 = curSeg[this._si];\n        }\n        curIndex = i;\n        //now find the appropriate sub-segment (we split it into the number of pieces that was defined by \"precision\" and measured each one)\n        v1 -= this._l1;\n        i = this._si;\n        if (v1 > this._s2 && i < curSeg.length - 1) {\n          l = curSeg.length - 1;\n          while (i < l && (this._s2 = curSeg[++i]) <= v1) {}\n          this._s1 = curSeg[i - 1];\n          this._si = i;\n        } else if (v1 < this._s1 && i > 0) {\n          while (i > 0 && (this._s1 = curSeg[--i]) >= v1) {}\n          if (i === 0 && v1 < this._s1) {\n            this._s1 = 0;\n          } else {\n            i++;\n          }\n          this._s2 = curSeg[i];\n          this._si = i;\n        }\n        t = v === 1 ? 1 : (i + (v1 - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n      }\n      inv = 1 - t;\n      i = this._props.length;\n      while (--i > -1) {\n        p = this._props[i];\n        b = this._beziers[p][curIndex];\n        val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n        if (this._mod[p]) {\n          val = this._mod[p](val, target);\n        }\n        if (func[p]) {\n          target[p](val);\n        } else {\n          target[p] = val;\n        }\n      }\n      if (this._autoRotate) {\n        var ar = this._autoRotate,\n          b2,\n          x1,\n          y1,\n          x2,\n          y2,\n          add,\n          conv;\n        i = ar.length;\n        while (--i > -1) {\n          p = ar[i][2];\n          add = ar[i][3] || 0;\n          conv = ar[i][4] === true ? 1 : _RAD2DEG;\n          b = this._beziers[ar[i][0]];\n          b2 = this._beziers[ar[i][1]];\n          if (b && b2) {\n            //in case one of the properties got overwritten.\n            b = b[curIndex];\n            b2 = b2[curIndex];\n            x1 = b.a + (b.b - b.a) * t;\n            x2 = b.b + (b.c - b.b) * t;\n            x1 += (x2 - x1) * t;\n            x2 += (b.c + (b.d - b.c) * t - x2) * t;\n            y1 = b2.a + (b2.b - b2.a) * t;\n            y2 = b2.b + (b2.c - b2.b) * t;\n            y1 += (y2 - y1) * t;\n            y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n            val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n            if (this._mod[p]) {\n              val = this._mod[p](val, target); //for modProps\n            }\n\n            if (func[p]) {\n              target[p](val);\n            } else {\n              target[p] = val;\n            }\n          }\n        }\n      }\n    }\n  }),\n  p = BezierPlugin.prototype;\nBezierPlugin.bezierThrough = bezierThrough;\nBezierPlugin.cubicToQuadratic = cubicToQuadratic;\nBezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the \"css\" object using the autoCSS feature of TweenLite\nBezierPlugin.quadraticToCubic = function (a, b, c) {\n  return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n};\nBezierPlugin._cssRegister = function () {\n  var CSSPlugin = _globals.CSSPlugin;\n  if (!CSSPlugin) {\n    return;\n  }\n  var _internals = CSSPlugin._internals,\n    _parseToProxy = _internals._parseToProxy,\n    _setPluginRatio = _internals._setPluginRatio,\n    CSSPropTween = _internals.CSSPropTween;\n  _internals._registerComplexSpecialProp(\"bezier\", {\n    parser: function (t, e, prop, cssp, pt, plugin) {\n      if (e instanceof Array) {\n        e = {\n          values: e\n        };\n      }\n      plugin = new BezierPlugin();\n      var values = e.values,\n        l = values.length - 1,\n        pluginValues = [],\n        v = {},\n        i,\n        p,\n        data;\n      if (l < 0) {\n        return pt;\n      }\n      for (i = 0; i <= l; i++) {\n        data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n        pluginValues[i] = data.end;\n      }\n      for (p in e) {\n        v[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.\n      }\n\n      v.values = pluginValues;\n      pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n      pt.data = data;\n      pt.plugin = plugin;\n      pt.setRatio = _setPluginRatio;\n      if (v.autoRotate === 0) {\n        v.autoRotate = true;\n      }\n      if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n        i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n        v.autoRotate = data.end.left != null ? [[\"left\", \"top\", \"rotation\", i, false]] : data.end.x != null ? [[\"x\", \"y\", \"rotation\", i, false]] : false;\n      }\n      if (v.autoRotate) {\n        if (!cssp._transform) {\n          cssp._enableTransforms(false);\n        }\n        data.autoRotate = cssp._target._gsTransform;\n        data.proxy.rotation = data.autoRotate.rotation || 0;\n        cssp._overwriteProps.push(\"rotation\");\n      }\n      plugin._onInitTween(data.proxy, v, cssp._tween);\n      return pt;\n    }\n  });\n};\np._mod = function (lookup) {\n  var op = this._overwriteProps,\n    i = op.length,\n    val;\n  while (--i > -1) {\n    val = lookup[op[i]];\n    if (val && typeof val === \"function\") {\n      this._mod[op[i]] = val;\n    }\n  }\n};\np._kill = function (lookup) {\n  var a = this._props,\n    p,\n    i;\n  for (p in this._beziers) {\n    if (p in lookup) {\n      delete this._beziers[p];\n      delete this._func[p];\n      i = a.length;\n      while (--i > -1) {\n        if (a[i] === p) {\n          a.splice(i, 1);\n        }\n      }\n    }\n  }\n  a = this._autoRotate;\n  if (a) {\n    i = a.length;\n    while (--i > -1) {\n      if (lookup[a[i][2]]) {\n        a.splice(i, 1);\n      }\n    }\n  }\n  return this._super._kill.call(this, lookup);\n};\nexport { BezierPlugin, BezierPlugin as default };","map":{"version":3,"names":["_gsScope","_RAD2DEG","Math","PI","_r1","_r2","_r3","_corProps","_globals","_gsDefine","globals","Segment","a","b","c","d","da","ca","ba","_correlate","cubicToQuadratic","q1","q2","q3","q4","mab","mbc","mcd","mabc","mbcd","m8","_calculateControlPoints","curviness","quad","basic","correlate","l","length","ii","cp1","i","p1","p2","p3","seg","m1","m2","mm","cp2","qb","r1","r2","tl","splice","_parseAnchors","values","p","prepend","tmp","concat","charAt","Number","substr","bezierThrough","quadratic","obj","props","first","j","r","seamless","last","push","abs","unshift","indexOf","sqrt","_parseBezierData","type","inc","soft","cur","cnt","_addCubicLengths","steps","resolution","d1","s","inv","bez","index","_parseLengthData","lengths","total","threshold","segments","curLS","BezierPlugin","plugin","propName","priority","version","API","global","init","target","vars","tween","_target","Array","_func","_mod","_props","_timeRes","timeResolution","parseInt","second","autoRotate","orientToBezier","isFunc","_autoRotate","_overwriteProps","parseFloat","_beziers","isNaN","_segCount","ld","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","call","_startRatio","runBackwards","set","v","func","notStart","curIndex","t","val","curSeg","v1","ar","b2","x1","y1","x2","y2","add","conv","atan2","prototype","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_internals","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","parser","e","prop","cssp","pt","pluginValues","data","end","setRatio","left","x","_transform","_enableTransforms","_gsTransform","proxy","rotation","_onInitTween","_tween","lookup","op","_kill","_super","default"],"sources":["C:/Users/Wards/Desktop/webs/per/node_modules/hover-effect/node_modules/gsap/BezierPlugin.js"],"sourcesContent":["/*!\n * VERSION: 1.3.9\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\nimport { _gsScope } from \"./TweenLite.js\";\n\n\t\tvar _RAD2DEG = 180 / Math.PI,\n\t\t\t_r1 = [],\n\t\t\t_r2 = [],\n\t\t\t_r3 = [],\n\t\t\t_corProps = {},\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\tSegment = function(a, b, c, d) {\n\t\t\t\tif (c === d) { //if c and d match, the final autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tc = d - (d - b) / 1000000;\n\t\t\t\t}\n\t\t\t\tif (a === b) { //if a and b match, the starting autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tb = a + (c - a) / 1000000;\n\t\t\t\t}\n\t\t\t\tthis.a = a;\n\t\t\t\tthis.b = b;\n\t\t\t\tthis.c = c;\n\t\t\t\tthis.d = d;\n\t\t\t\tthis.da = d - a;\n\t\t\t\tthis.ca = c - a;\n\t\t\t\tthis.ba = b - a;\n\t\t\t},\n\t\t\t_correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",\n\t\t\tcubicToQuadratic = function(a, b, c, d) {\n\t\t\t\tvar q1 = {a:a},\n\t\t\t\t\tq2 = {},\n\t\t\t\t\tq3 = {},\n\t\t\t\t\tq4 = {c:d},\n\t\t\t\t\tmab = (a + b) / 2,\n\t\t\t\t\tmbc = (b + c) / 2,\n\t\t\t\t\tmcd = (c + d) / 2,\n\t\t\t\t\tmabc = (mab + mbc) / 2,\n\t\t\t\t\tmbcd = (mbc + mcd) / 2,\n\t\t\t\t\tm8 = (mbcd - mabc) / 8;\n\t\t\t\tq1.b = mab + (a - mab) / 4;\n\t\t\t\tq2.b = mabc + m8;\n\t\t\t\tq1.c = q2.a = (q1.b + q2.b) / 2;\n\t\t\t\tq2.c = q3.a = (mabc + mbcd) / 2;\n\t\t\t\tq3.b = mbcd - m8;\n\t\t\t\tq4.b = mcd + (d - mcd) / 4;\n\t\t\t\tq3.c = q4.a = (q3.b + q4.b) / 2;\n\t\t\t\treturn [q1, q2, q3, q4];\n\t\t\t},\n\t\t\t_calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t\t\t\tvar l = a.length - 1,\n\t\t\t\t\tii = 0,\n\t\t\t\t\tcp1 = a[0].a,\n\t\t\t\t\ti, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tseg = a[ii];\n\t\t\t\t\tp1 = seg.a;\n\t\t\t\t\tp2 = seg.d;\n\t\t\t\t\tp3 = a[ii+1].d;\n\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tr1 = _r1[i];\n\t\t\t\t\t\tr2 = _r2[i];\n\t\t\t\t\t\ttl = ((r2 + r1) * curviness * 0.25) / (basic ? 0.5 : _r3[i] || 0.5);\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : (r1 !== 0 ? tl / r1 : 0));\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : (r2 !== 0 ? tl / r2 : 0));\n\t\t\t\t\t\tmm = p2 - (m1 + (((m2 - m1) * ((r1 * 3 / (r1 + r2)) + 0.5) / 4) || 0));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * curviness * 0.5;\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * curviness * 0.5;\n\t\t\t\t\t\tmm = p2 - (m1 + m2) / 2;\n\t\t\t\t\t}\n\t\t\t\t\tm1 += mm;\n\t\t\t\t\tm2 += mm;\n\n\t\t\t\t\tseg.c = cp2 = m1;\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tseg.b = cp1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.\n\t\t\t\t\t}\n\n\t\t\t\t\tseg.da = p2 - p1;\n\t\t\t\t\tseg.ca = cp2 - p1;\n\t\t\t\t\tseg.ba = cp1 - p1;\n\n\t\t\t\t\tif (quad) {\n\t\t\t\t\t\tqb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t\t\tii += 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tii++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcp1 = m2;\n\t\t\t\t}\n\t\t\t\tseg = a[ii];\n\t\t\t\tseg.b = cp1;\n\t\t\t\tseg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.\n\t\t\t\tseg.da = seg.d - seg.a;\n\t\t\t\tseg.ca = seg.c - seg.a;\n\t\t\t\tseg.ba = cp1 - seg.a;\n\t\t\t\tif (quad) {\n\t\t\t\t\tqb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseAnchors = function(values, p, correlate, prepend) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tl, i, p1, p2, p3, tmp;\n\t\t\t\tif (prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t\ti = values.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (typeof( (tmp = values[i][p]) ) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t\t\t\t\t\t\tvalues[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tl = values.length - 2;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\ta[0] = new Segment(values[0][p], 0, 0, values[0][p]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tp1 = values[i][p];\n\t\t\t\t\tp2 = values[i+1][p];\n\t\t\t\t\ta[i] = new Segment(p1, 0, 0, p2);\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tp3 = values[i+2][p];\n\t\t\t\t\t\t_r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t\t\t\t\t\t_r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[i] = new Segment(values[i][p], 0, 0, values[i+1][p]);\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\tbezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t\t\t\tvar obj = {},\n\t\t\t\t\tprops = [],\n\t\t\t\t\tfirst = prepend || values[0],\n\t\t\t\t\ti, p, a, j, r, l, seamless, last;\n\t\t\t\tcorrelate = (typeof(correlate) === \"string\") ? \",\"+correlate+\",\" : _correlate;\n\t\t\t\tif (curviness == null) {\n\t\t\t\t\tcurviness = 1;\n\t\t\t\t}\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\t//check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)\n\t\t\t\tif (values.length > 1) {\n\t\t\t\t\tlast = values[values.length - 1];\n\t\t\t\t\tseamless = true;\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = props[i];\n\t\t\t\t\t\tif (Math.abs(first[p] - last[p]) > 0.05) { //build in a tolerance of +/-0.05 to accommodate rounding errors.\n\t\t\t\t\t\t\tseamless = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\tvalues = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens\n\t\t\t\t\t\tif (prepend) {\n\t\t\t\t\t\t\tvalues.unshift(prepend);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues.push(values[1]);\n\t\t\t\t\t\tprepend = values[values.length - 3];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_r1.length = _r2.length = _r3.length = 0;\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\t_corProps[p] = (correlate.indexOf(\",\"+p+\",\") !== -1);\n\t\t\t\t\tobj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t\t\t\t}\n\t\t\t\ti = _r1.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_r1[i] = Math.sqrt(_r1[i]);\n\t\t\t\t\t_r2[i] = Math.sqrt(_r2[i]);\n\t\t\t\t}\n\t\t\t\tif (!basic) {\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (_corProps[p]) {\n\t\t\t\t\t\t\ta = obj[props[i]];\n\t\t\t\t\t\t\tl = a.length - 1;\n\t\t\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\t\t\tr = (a[j+1].da / _r2[j] + a[j].da / _r1[j]) || 0;\n\t\t\t\t\t\t\t\t_r3[j] = (_r3[j] || 0) + r * r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti = _r3.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_r3[i] = Math.sqrt(_r3[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\tj = quadratic ? 4 : 1;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\ta = obj[p];\n\t\t\t\t\t_calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\ta.splice(0, j);\n\t\t\t\t\t\ta.splice(a.length - j, j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_parseBezierData = function(values, type, prepend) {\n\t\t\t\ttype = type || \"soft\";\n\t\t\t\tvar obj = {},\n\t\t\t\t\tinc = (type === \"cubic\") ? 3 : 2,\n\t\t\t\t\tsoft = (type === \"soft\"),\n\t\t\t\t\tprops = [],\n\t\t\t\t\ta, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t\t\t\tif (soft && prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t}\n\t\t\t\tif (values == null || values.length < inc + 1) { throw \"invalid Bezier data\"; }\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\tobj[p] = cur = [];\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tl = values.length;\n\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\ta = (prepend == null) ? values[j][p] : (typeof( (tmp = values[j][p]) ) === \"string\" && tmp.charAt(1) === \"=\") ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t\t\t\t\t\tif (soft) if (j > 1) if (j < l - 1) {\n\t\t\t\t\t\t\tcur[cnt++] = (a + cur[cnt-2]) / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcur[cnt++] = a;\n\t\t\t\t\t}\n\t\t\t\t\tl = cnt - inc + 1;\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tfor (j = 0; j < l; j += inc) {\n\t\t\t\t\t\ta = cur[j];\n\t\t\t\t\t\tb = cur[j+1];\n\t\t\t\t\t\tc = cur[j+2];\n\t\t\t\t\t\td = (inc === 2) ? 0 : cur[j+3];\n\t\t\t\t\t\tcur[cnt++] = tmp = (inc === 3) ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t\t\t\t}\n\t\t\t\t\tcur.length = cnt;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_addCubicLengths = function(a, steps, resolution) {\n\t\t\t\tvar inc = 1 / resolution,\n\t\t\t\t\tj = a.length,\n\t\t\t\t\td, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t\t\t\twhile (--j > -1) {\n\t\t\t\t\tbez = a[j];\n\t\t\t\t\ts = bez.a;\n\t\t\t\t\tda = bez.d - s;\n\t\t\t\t\tca = bez.c - s;\n\t\t\t\t\tba = bez.b - s;\n\t\t\t\t\td = d1 = 0;\n\t\t\t\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\t\t\t\tp = inc * i;\n\t\t\t\t\t\tinv = 1 - p;\n\t\t\t\t\t\td = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t\t\t\t\t\tindex = j * resolution + i - 1;\n\t\t\t\t\t\tsteps[index] = (steps[index] || 0) + d * d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseLengthData = function(obj, resolution) {\n\t\t\t\tresolution = resolution >> 0 || 6;\n\t\t\t\tvar a = [],\n\t\t\t\t\tlengths = [],\n\t\t\t\t\td = 0,\n\t\t\t\t\ttotal = 0,\n\t\t\t\t\tthreshold = resolution - 1,\n\t\t\t\t\tsegments = [],\n\t\t\t\t\tcurLS = [], //current length segments array\n\t\t\t\t\tp, i, l, index;\n\t\t\t\tfor (p in obj) {\n\t\t\t\t\t_addCubicLengths(obj[p], a, resolution);\n\t\t\t\t}\n\t\t\t\tl = a.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\td += Math.sqrt(a[i]);\n\t\t\t\t\tindex = i % resolution;\n\t\t\t\t\tcurLS[index] = d;\n\t\t\t\t\tif (index === threshold) {\n\t\t\t\t\t\ttotal += d;\n\t\t\t\t\t\tindex = (i / resolution) >> 0;\n\t\t\t\t\t\tsegments[index] = curLS;\n\t\t\t\t\t\tlengths[index] = total;\n\t\t\t\t\t\td = 0;\n\t\t\t\t\t\tcurLS = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {length:total, lengths:lengths, segments:segments};\n\t\t\t},\n\n\n\n\t\t\tBezierPlugin = _gsScope._gsDefine.plugin({\n\t\t\t\t\tpropName: \"bezier\",\n\t\t\t\t\tpriority: -1,\n\t\t\t\t\tversion: \"1.3.9\",\n\t\t\t\t\tAPI: 2,\n\t\t\t\t\tglobal:true,\n\n\t\t\t\t\t//gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\t\tinit: function(target, vars, tween) {\n\t\t\t\t\t\tthis._target = target;\n\t\t\t\t\t\tif (vars instanceof Array) {\n\t\t\t\t\t\t\tvars = {values:vars};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._func = {};\n\t\t\t\t\t\tthis._mod = {};\n\t\t\t\t\t\tthis._props = [];\n\t\t\t\t\t\tthis._timeRes = (vars.timeResolution == null) ? 6 : parseInt(vars.timeResolution, 10);\n\t\t\t\t\t\tvar values = vars.values || [],\n\t\t\t\t\t\t\tfirst = {},\n\t\t\t\t\t\t\tsecond = values[0],\n\t\t\t\t\t\t\tautoRotate = vars.autoRotate || tween.vars.orientToBezier,\n\t\t\t\t\t\t\tp, isFunc, i, j, prepend;\n\n\t\t\t\t\t\tthis._autoRotate = autoRotate ? (autoRotate instanceof Array) ? autoRotate : [[\"x\",\"y\",\"rotation\",((autoRotate === true) ? 0 : Number(autoRotate) || 0)]] : null;\n\t\t\t\t\t\tfor (p in second) {\n\t\t\t\t\t\t\tthis._props.push(p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\n\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\tisFunc = this._func[p] = (typeof(target[p]) === \"function\");\n\t\t\t\t\t\t\tfirst[p] = (!isFunc) ? parseFloat(target[p]) : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]();\n\t\t\t\t\t\t\tif (!prepend) if (first[p] !== values[0][p]) {\n\t\t\t\t\t\t\t\tprepend = first;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._beziers = (vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\") ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, (vars.type === \"thruBasic\"), vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t\t\t\t\t\tthis._segCount = this._beziers[p].length;\n\n\t\t\t\t\t\tif (this._timeRes) {\n\t\t\t\t\t\t\tvar ld = _parseLengthData(this._beziers, this._timeRes);\n\t\t\t\t\t\t\tthis._length = ld.length;\n\t\t\t\t\t\t\tthis._lengths = ld.lengths;\n\t\t\t\t\t\t\tthis._segments = ld.segments;\n\t\t\t\t\t\t\tthis._l1 = this._li = this._s1 = this._si = 0;\n\t\t\t\t\t\t\tthis._l2 = this._lengths[0];\n\t\t\t\t\t\t\tthis._curSeg = this._segments[0];\n\t\t\t\t\t\t\tthis._s2 = this._curSeg[0];\n\t\t\t\t\t\t\tthis._prec = 1 / this._curSeg.length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((autoRotate = this._autoRotate)) {\n\t\t\t\t\t\t\tthis._initialRotations = [];\n\t\t\t\t\t\t\tif (!(autoRotate[0] instanceof Array)) {\n\t\t\t\t\t\t\t\tthis._autoRotate = autoRotate = [autoRotate];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti = autoRotate.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\t\tp = autoRotate[i][j];\n\t\t\t\t\t\t\t\t\tthis._func[p] = (typeof(target[p]) === \"function\") ? target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ] : false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = autoRotate[i][2];\n\t\t\t\t\t\t\t\tthis._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\t\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\n\t\t\t\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\t\t\t\tset: function(v) {\n\t\t\t\t\t\tvar segments = this._segCount,\n\t\t\t\t\t\t\tfunc = this._func,\n\t\t\t\t\t\t\ttarget = this._target,\n\t\t\t\t\t\t\tnotStart = (v !== this._startRatio),\n\t\t\t\t\t\t\tcurIndex, inv, i, p, b, t, val, l, lengths, curSeg, v1;\n\t\t\t\t\t\tif (!this._timeRes) {\n\t\t\t\t\t\t\tcurIndex = (v < 0) ? 0 : (v >= 1) ? segments - 1 : (segments * v) >> 0;\n\t\t\t\t\t\t\tt = (v - (curIndex * (1 / segments))) * segments;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlengths = this._lengths;\n\t\t\t\t\t\t\tcurSeg = this._curSeg;\n\t\t\t\t\t\t\tv1 = v * this._length;\n\t\t\t\t\t\t\ti = this._li;\n\t\t\t\t\t\t\t//find the appropriate segment (if the currently cached one isn't correct)\n\t\t\t\t\t\t\tif (v1 > this._l2 && i < segments - 1) {\n\t\t\t\t\t\t\t\tl = segments - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._l2 = lengths[++i]) <= v1) {\t}\n\t\t\t\t\t\t\t\tthis._l1 = lengths[i-1];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[(this._s1 = this._si = 0)];\n\t\t\t\t\t\t\t} else if (v1 < this._l1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._l1 = lengths[--i]) >= v1) { }\n\t\t\t\t\t\t\t\tif (i === 0 && v1 < this._l1) {\n\t\t\t\t\t\t\t\t\tthis._l1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._l2 = lengths[i];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[this._si];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurIndex = i;\n\t\t\t\t\t\t\t//now find the appropriate sub-segment (we split it into the number of pieces that was defined by \"precision\" and measured each one)\n\t\t\t\t\t\t\tv1 -= this._l1;\n\t\t\t\t\t\t\ti = this._si;\n\t\t\t\t\t\t\tif (v1 > this._s2 && i < curSeg.length - 1) {\n\t\t\t\t\t\t\t\tl = curSeg.length - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._s2 = curSeg[++i]) <= v1) {\t}\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[i-1];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t} else if (v1 < this._s1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._s1 = curSeg[--i]) >= v1) {\t}\n\t\t\t\t\t\t\t\tif (i === 0 && v1 < this._s1) {\n\t\t\t\t\t\t\t\t\tthis._s1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[i];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tt = (v === 1) ? 1 : ((i + (v1 - this._s1) / (this._s2 - this._s1)) * this._prec) || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinv = 1 - t;\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\t\t\t\t\t\t\tb = this._beziers[p][curIndex];\n\t\t\t\t\t\t\tval = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\tval = this._mod[p](val, target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._autoRotate) {\n\t\t\t\t\t\t\tvar ar = this._autoRotate,\n\t\t\t\t\t\t\t\tb2, x1, y1, x2, y2, add, conv;\n\t\t\t\t\t\t\ti = ar.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tp = ar[i][2];\n\t\t\t\t\t\t\t\tadd = ar[i][3] || 0;\n\t\t\t\t\t\t\t\tconv = (ar[i][4] === true) ? 1 : _RAD2DEG;\n\t\t\t\t\t\t\t\tb = this._beziers[ar[i][0]];\n\t\t\t\t\t\t\t\tb2 = this._beziers[ar[i][1]];\n\n\t\t\t\t\t\t\t\tif (b && b2) { //in case one of the properties got overwritten.\n\t\t\t\t\t\t\t\t\tb = b[curIndex];\n\t\t\t\t\t\t\t\t\tb2 = b2[curIndex];\n\n\t\t\t\t\t\t\t\t\tx1 = b.a + (b.b - b.a) * t;\n\t\t\t\t\t\t\t\t\tx2 = b.b + (b.c - b.b) * t;\n\t\t\t\t\t\t\t\t\tx1 += (x2 - x1) * t;\n\t\t\t\t\t\t\t\t\tx2 += ((b.c + (b.d - b.c) * t) - x2) * t;\n\n\t\t\t\t\t\t\t\t\ty1 = b2.a + (b2.b - b2.a) * t;\n\t\t\t\t\t\t\t\t\ty2 = b2.b + (b2.c - b2.b) * t;\n\t\t\t\t\t\t\t\t\ty1 += (y2 - y1) * t;\n\t\t\t\t\t\t\t\t\ty2 += ((b2.c + (b2.d - b2.c) * t) - y2) * t;\n\n\t\t\t\t\t\t\t\t\tval = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\n\t\t\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\t\t\tval = this._mod[p](val, target); //for modProps\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}),\n\t\t\tp = BezierPlugin.prototype;\n\n\n\t\tBezierPlugin.bezierThrough = bezierThrough;\n\t\tBezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t\tBezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the \"css\" object using the autoCSS feature of TweenLite\n\t\tBezierPlugin.quadraticToCubic = function(a, b, c) {\n\t\t\treturn new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t};\n\n\t\tBezierPlugin._cssRegister = function() {\n\t\t\tvar CSSPlugin = _globals.CSSPlugin;\n\t\t\tif (!CSSPlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _internals = CSSPlugin._internals,\n\t\t\t\t_parseToProxy = _internals._parseToProxy,\n\t\t\t\t_setPluginRatio = _internals._setPluginRatio,\n\t\t\t\tCSSPropTween = _internals.CSSPropTween;\n\t\t\t_internals._registerComplexSpecialProp(\"bezier\", {parser:function(t, e, prop, cssp, pt, plugin) {\n\t\t\t\tif (e instanceof Array) {\n\t\t\t\t\te = {values:e};\n\t\t\t\t}\n\t\t\t\tplugin = new BezierPlugin();\n\t\t\t\tvar values = e.values,\n\t\t\t\t\tl = values.length - 1,\n\t\t\t\t\tpluginValues = [],\n\t\t\t\t\tv = {},\n\t\t\t\t\ti, p, data;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i <= l; i++) {\n\t\t\t\t\tdata = _parseToProxy(t, values[i], cssp, pt, plugin, (l !== i));\n\t\t\t\t\tpluginValues[i] = data.end;\n\t\t\t\t}\n\t\t\t\tfor (p in e) {\n\t\t\t\t\tv[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.\n\t\t\t\t}\n\t\t\t\tv.values = pluginValues;\n\t\t\t\tpt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t\t\t\tpt.data = data;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setPluginRatio;\n\t\t\t\tif (v.autoRotate === 0) {\n\t\t\t\t\tv.autoRotate = true;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t\t\t\t\ti = (v.autoRotate === true) ? 0 : Number(v.autoRotate);\n\t\t\t\t\tv.autoRotate = (data.end.left != null) ? [[\"left\",\"top\",\"rotation\",i,false]] : (data.end.x != null) ? [[\"x\",\"y\",\"rotation\",i,false]] : false;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate) {\n\t\t\t\t\tif (!cssp._transform) {\n\t\t\t\t\t\tcssp._enableTransforms(false);\n\t\t\t\t\t}\n\t\t\t\t\tdata.autoRotate = cssp._target._gsTransform;\n\t\t\t\t\tdata.proxy.rotation = data.autoRotate.rotation || 0;\n\t\t\t\t\tcssp._overwriteProps.push(\"rotation\");\n\t\t\t\t}\n\t\t\t\tplugin._onInitTween(data.proxy, v, cssp._tween);\n\t\t\t\treturn pt;\n\t\t\t}});\n\t\t};\n\n\t\tp._mod = function(lookup) {\n\t\t\tvar op = this._overwriteProps,\n\t\t\t\ti = op.length,\n\t\t\t\tval;\n\t\t\twhile (--i > -1) {\n\t\t\t\tval = lookup[op[i]];\n\t\t\t\tif (val && typeof(val) === \"function\") {\n\t\t\t\t\tthis._mod[op[i]] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._props,\n\t\t\t\tp, i;\n\t\t\tfor (p in this._beziers) {\n\t\t\t\tif (p in lookup) {\n\t\t\t\t\tdelete this._beziers[p];\n\t\t\t\t\tdelete this._func[p];\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i] === p) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ta = this._autoRotate;\n\t\t\tif (a) {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i][2]]) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._super._kill.call(this, lookup);\n\t\t};\n\nexport { BezierPlugin, BezierPlugin as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}